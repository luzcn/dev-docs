swagger: "2.0"
info:
  description: "Front-End API to inspect the stream from OSS."
  version: "1.0.0"
  title: "Kafka Font End"
  #termsOfService: "http://swagger.io/terms/"
  contact:
    email: "oss@oracle.com"
host: "oss.oracle.com"
basePath: "/v1"
schemes:
- "http"
paths:
  /topics:
    get:
      tags:
      - "topics"
      summary: "Lists the topics for the authenticated user"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/TopicsResponse"
        401:
          description: "Unauthorized"
  /topics/{name}/partitions:
    get:
      tags:
      - "partitions"
      summary: "Gets the partitions for the specified topic"
      description: "Multiple status values can be provided with comma separated strings"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "Name of the topic to get partitions from"
        required: true
        type: "string"
      - name: "time"
        in: "query"
        description: "The returned offset will now represent the offset that needs to be queried to get messages from the desired timestamp"
        required: false
        type: "integer"
        format: "UNIX time"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Partition"
        401:
          description: "Unauthorized"
  /topics/{name}/partitions/{id}:
    get:
      tags:
      - "messages"
      summary: "Get messages from the partition"
      description: "Returns the messages for the specified topic and for the specified partition. By default, it will return up to 20 messages."
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "Name of the topic to get messages from"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "Id of the partition to get messages from"
        required: true
        type: "integer"
      - name: "offset"
        in: "query"
        description: "Offset of the first message"
        required: false
        default: 0
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Max size to return in bytes"
        required: false
        default: 20
        maximum: 1000
        type: integer
      - name: OSS-Key-Deserializer
        in: header
        description: "Specifies the deserializer to apply on the buffer representing the key (returned by Kafka) as to remove processing from the client. If not specified it will be returned as a base64 string and deserialization will have to be handled by the client. If StringDeserializer is chosen, the encoding can be appended in the form \"StringDeserializer;utf8\" for example."
        required: false
        type: "string"
        default: "BinaryDeserializer"
        enum: ["BinaryDeserializer", "StringDeserializer", "JsonDeserializer"]
      - name: OSS-Value-Deserializer
        in: header
        description: "Specifies the deserializer to apply on the buffer representing the key (returned by Kafka) as to remove processing from the client. If not specified it will be returned as a base64 string and deserialization will have to be handled by the client. If StringDeserializer is chosen, the encoding can be appended in the form \"StringDeserializer;utf8\" for example."
        required: false
        type: "string"
        default: "BinaryDeserializer"
        enum: ["BinaryDeserializer", "StringDeserializer", "JsonDeserializer"]
      responses:
        200:
          description: "Success"
          schema:
              $ref: "#/definitions/MessagesResponse"
        401:
          description: "Unauthorized"
        404:
          description: "Unknown topic or partition"
  /healthcheck:
    get:
      tags:
      - "healthcheck"
      summary: "Checks the healthiness of the system"
      responses:
        200:
          description: "Success"
          schema:
              $ref: "#/definitions/Healthcheck"
        401:
          description: "Unauthorized"
definitions:
  TopicsResponse:
    type: "array"
    items:
      type: "string"
    example:
      - "topic1"
      - "topic2"
  Partition:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      offset:
        type: "integer"
        format: "int64"
      maxOffset:
        type: "integer"
        format: "int64"
  MessagesResponse:
    type: "object"
    properties:
      nextOffset:
        type: "integer"
        format: "int64"
      messages:
        type: "array"
        items:
          $ref: "#/definitions/Message"
  Message:
    type: "object"
    properties:
      topic:
        type: "string"
      partition:
        type: "string"
      key:
        type: "string"
      value:
        type: "string"
      offset:
        type: "integer"
        format: "int64"
      timestamp:
        type: "integer"
        format: "timestamp"
        description: "UNIX time"
      timestampTime:
        type: "integer"
        description: "Type of the timestamp. Can be: noTypestamp (-1), createTime (0) or logAppendTime (1)"
  Healthcheck:
    type: "object"
    properties:
      facadeLatency:
        type: "integer"
        format: "int64"
      facadeConnection:
        type: "boolean"
      facadeHealthCode:
        type: "integer"
        format: "int32"
externalDocs:
  description: "Find out more about Oracle Streaming Service"
  url: "http://oracle.com"